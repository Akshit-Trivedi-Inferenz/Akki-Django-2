name: Django CI Pull Request Combined

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  pull_request_target:
    branches: [ "main" ]

  # workflow_dispatch:

# permissions:
#    pull-requests: write
#    contents: write
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   max-parallel: 4
    #   matrix:
    #     python-version: [3.7, 3.8, 3.9]

    steps:
    # - uses: actions/checkout@v3
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python, javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3


    - name: Check files using the black formatter
      # uses: actions/checkout@v2
      uses: rickstaa/action-black@v1
      id: action_black
      with:
        black_args: "."

    # - name: Create Pull Request
    #   id: cpr
    #   uses: peter-evans/create-pull-request@v5
    # - name: Check outputs
    #   if: ${{ steps.cpr.outputs.pull-request-number }}
    #   run: |
    #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
    #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

    - name: Commit black formatting changes
      if: steps.action_black.outputs.is_formatted == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Apply Black formatting"
        echo "Current branch: ${{ github.head_ref }}"
        # git push origin "${{ github.head_ref }}"
        # git push
        git pull origin ${{ github.head_ref }} --rebase # Pull recent changes and rebase
        git push origin HEAD:${{ github.head_ref }}

    # - name: Commit changes
    #   if: ${{ steps.action_black.outputs.black_changed == 'true' }}
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git commit -am "Black auto-formatting"
  
    # - name: Push changes
    #   if: ${{ steps.action_black.outputs.black_changed == 'true' }}
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.head_ref }}

        
    # - name: Create Pull Request
    #   if: steps.action_black.outputs.is_formatted == 'true'
    #   uses: peter-evans/create-pull-request@v3
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     title: "Format Python code with psf/black push"
    #     commit-message: ":art: Format Python code with psf/black"
    #     body: |
    #       There appear to be some python formatting errors in ${{ github.sha }}. This pull request
    #       uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
    #     base: ${{ github.head_ref }} # Creates pull request onto pull request or commit branch
    #     branch: actions/black

    # - name: Code Formatter for HTML, CSS & JS
    # - uses: actions/checkout@v2 # Check out the repository first.
    # - uses: actionsx/prettier@v2
    #   with:
    #     # prettier CLI arguments.
    #     args: --write .

    # - name: Create Pull Request
    #   uses: peter-evans/create-pull-request@v3
    #   if: steps.prettier.outputs.changes != ''
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     commit-message: "Apply Prettier formatting"
    #     title: "Apply Prettier formatting"
    #     body: "This PR applies Prettier formatting to the code."
    #     branch: "prettier-formatting"

    
    - name: Format HTML, CSS, and JS with Prettier
      uses: actionsx/prettier@v2
      with:
        args: --write "akki_django_app/akki_django_app/templates/**/*.{html,css,js}"

    - name: Check if files were formatted (Prettier)
      id: check_prettier
      run: |
        if [[ $(git diff --name-only) ]]; then
          echo "::set-output name=changes::true"
        else
          echo "::set-output name=changes::false"
        fi

    - name: Commit black formatting changes
      if: steps.check_prettier.outputs.changes == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Apply Prettier formatting"
        echo "Current branch: ${{ github.head_ref }}"
        # git push origin "${{ github.head_ref }}"
        # git push
        git pull origin ${{ github.head_ref }} --rebase # Pull recent changes and rebase
        git push origin HEAD:${{ github.head_ref }}

    # - name: Commit changes (Prettier)      
    #   if: steps.check_prettier.outputs.changes == 'true'    
    #   run: |    
    #     git config --local user.email "action@github.com"      
    #     git config --local user.name "GitHub Action"      
    #     git commit -am "Prettier auto-formatting"
    
    
    
    # - name: Push changes (Prettier)
    #   if: steps.check_prettier.outputs.changes == 'true'
    #   uses: ad-m/github-push-action@master    
    #   with:    
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.head_ref }}
      

    # - name: Create Pull Request (Prettier)
    #   # if: steps.prettier.outputs.changes != ''
    #   if: steps.check_prettier.outputs.changes == 'true'
    #   uses: peter-evans/create-pull-request@v3
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     commit-message: "Apply Prettier formatting"
    #     title: "Apply Prettier formatting"
    #     body: "This PR applies Prettier formatting to HTML, CSS, and JS files."
    #     branch: "prettier-formatting-fixes"


    # - name: Super-Lint Code
    #   uses: github/super-linter@v5
    #   env:
    #     # DEFAULT_BRANCH: main
    #     DEFAULT_BRANCH: actions/black
    #     # To report GitHub Actions status checks
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Migrations
      run: |
        python akki_django_app/manage.py makemigrations
        python akki_django_app/manage.py migrate
    # - name: Run Tests
    #   run: |
    #     python manage.py test

    # - name: Auto Commit Action
    #   uses: stefanzweifel/git-auto-commit-action@v5
    #   with:
    #     commit_message: Testing Akki Commit Message
    #     file_pattern: '!*.github/workflows/ci_django.yml'
